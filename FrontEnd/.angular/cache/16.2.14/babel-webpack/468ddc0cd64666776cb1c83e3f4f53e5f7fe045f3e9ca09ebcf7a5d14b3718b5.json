{"ast":null,"code":"import * as i0 from \"@angular/core\";\nimport * as i1 from \"@angular/common/http\";\nexport class HttpService {\n  constructor(http) {\n    this.http = http;\n    this.url = 'http://127.0.0.1:3000/author';\n  }\n  CreateUserAccount(model) {\n    return this.http.post('http://localhost:3000/users', model);\n  }\n  createUserAccountDataBase(model) {\n    return this.http.post(this.url + 'register', model);\n  }\n  getAllUsers() {\n    return this.http.get('http://localhost:3000/users');\n  }\n  getSpecificUser(id) {\n    return this.http.get('http://localhost:3000/users/' + id);\n  }\n  putUserInformation(model) {\n    return this.http.put('http://localhost:3000/login/1', model);\n  }\n  getUserInformation() {\n    return this.http.get('http://localhost:3000/login/1');\n  }\n  patchLoginInformation1(model) {\n    return this.http.patch('http://localhost:3000/login/1', model);\n  }\n  patchUserInformation(id, model) {\n    return this.http.patch('http://localhost:3000/users/' + id, model);\n  }\n  postArticle(model) {\n    return this.http.post('http://localhost:3000/articles', model);\n  }\n  getAllArticles() {\n    return this.http.get('http://localhost:3000/articles');\n  }\n  getSpecificArticle(id) {\n    return this.http.get('http://localhost:3000/articles/' + id);\n  }\n  static #_ = this.ɵfac = function HttpService_Factory(t) {\n    return new (t || HttpService)(i0.ɵɵinject(i1.HttpClient));\n  };\n  static #_2 = this.ɵprov = /*@__PURE__*/i0.ɵɵdefineInjectable({\n    token: HttpService,\n    factory: HttpService.ɵfac,\n    providedIn: 'root'\n  });\n}","map":{"version":3,"names":["HttpService","constructor","http","url","CreateUserAccount","model","post","createUserAccountDataBase","getAllUsers","get","getSpecificUser","id","putUserInformation","put","getUserInformation","patchLoginInformation1","patch","patchUserInformation","postArticle","getAllArticles","getSpecificArticle","_","i0","ɵɵinject","i1","HttpClient","_2","factory","ɵfac","providedIn"],"sources":["C:\\Users\\moham\\Desktop\\articles\\src\\app\\services\\httpRequest\\http.service.ts"],"sourcesContent":["import { Injectable } from '@angular/core';\nimport { HttpClient } from '@angular/common/http';\n\n\n@Injectable({\n  providedIn: 'root'\n})\nexport class HttpService {\n\n  constructor(private http:HttpClient){}\n  private url ='http://127.0.0.1:3000/author'\n  CreateUserAccount(model:any){\n   return this.http.post('http://localhost:3000/users',model);\n  }\n  createUserAccountDataBase(model:any){\n    return this.http.post(this.url +'register',model)\n  }\n  getAllUsers(){\n   return this.http.get('http://localhost:3000/users');\n  }\n  getSpecificUser(id:any){\n   return this.http.get('http://localhost:3000/users/'+id);\n\n  }\n  putUserInformation(model:any){\n    return this.http.put('http://localhost:3000/login/1',model);\n  }\n  getUserInformation(){\n    return this.http.get('http://localhost:3000/login/1');\n  }\n  patchLoginInformation1(model:any){\n    return this.http.patch('http://localhost:3000/login/1',model);\n\n  }\n  patchUserInformation(id:any,model:any){\n    return this.http.patch('http://localhost:3000/users/'+id,model)\n  }\n  postArticle(model:any){\n    return this.http.post('http://localhost:3000/articles',model)\n  }\n  getAllArticles(){\n    return this.http.get('http://localhost:3000/articles')\n  }\n  getSpecificArticle(id:any){\n    return this.http.get('http://localhost:3000/articles/'+id)\n\n  }\n}\n"],"mappings":";;AAOA,OAAM,MAAOA,WAAW;EAEtBC,YAAoBC,IAAe;IAAf,KAAAA,IAAI,GAAJA,IAAI;IAChB,KAAAC,GAAG,GAAE,8BAA8B;EADN;EAErCC,iBAAiBA,CAACC,KAAS;IAC1B,OAAO,IAAI,CAACH,IAAI,CAACI,IAAI,CAAC,6BAA6B,EAACD,KAAK,CAAC;EAC3D;EACAE,yBAAyBA,CAACF,KAAS;IACjC,OAAO,IAAI,CAACH,IAAI,CAACI,IAAI,CAAC,IAAI,CAACH,GAAG,GAAE,UAAU,EAACE,KAAK,CAAC;EACnD;EACAG,WAAWA,CAAA;IACV,OAAO,IAAI,CAACN,IAAI,CAACO,GAAG,CAAC,6BAA6B,CAAC;EACpD;EACAC,eAAeA,CAACC,EAAM;IACrB,OAAO,IAAI,CAACT,IAAI,CAACO,GAAG,CAAC,8BAA8B,GAACE,EAAE,CAAC;EAExD;EACAC,kBAAkBA,CAACP,KAAS;IAC1B,OAAO,IAAI,CAACH,IAAI,CAACW,GAAG,CAAC,+BAA+B,EAACR,KAAK,CAAC;EAC7D;EACAS,kBAAkBA,CAAA;IAChB,OAAO,IAAI,CAACZ,IAAI,CAACO,GAAG,CAAC,+BAA+B,CAAC;EACvD;EACAM,sBAAsBA,CAACV,KAAS;IAC9B,OAAO,IAAI,CAACH,IAAI,CAACc,KAAK,CAAC,+BAA+B,EAACX,KAAK,CAAC;EAE/D;EACAY,oBAAoBA,CAACN,EAAM,EAACN,KAAS;IACnC,OAAO,IAAI,CAACH,IAAI,CAACc,KAAK,CAAC,8BAA8B,GAACL,EAAE,EAACN,KAAK,CAAC;EACjE;EACAa,WAAWA,CAACb,KAAS;IACnB,OAAO,IAAI,CAACH,IAAI,CAACI,IAAI,CAAC,gCAAgC,EAACD,KAAK,CAAC;EAC/D;EACAc,cAAcA,CAAA;IACZ,OAAO,IAAI,CAACjB,IAAI,CAACO,GAAG,CAAC,gCAAgC,CAAC;EACxD;EACAW,kBAAkBA,CAACT,EAAM;IACvB,OAAO,IAAI,CAACT,IAAI,CAACO,GAAG,CAAC,iCAAiC,GAACE,EAAE,CAAC;EAE5D;EAAC,QAAAU,CAAA,G;qBAvCUrB,WAAW,EAAAsB,EAAA,CAAAC,QAAA,CAAAC,EAAA,CAAAC,UAAA;EAAA;EAAA,QAAAC,EAAA,G;WAAX1B,WAAW;IAAA2B,OAAA,EAAX3B,WAAW,CAAA4B,IAAA;IAAAC,UAAA,EAFV;EAAM","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}