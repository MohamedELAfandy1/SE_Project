{"ast":null,"code":"import { __decorate } from \"tslib\";\nimport { Component, ViewChild } from '@angular/core';\nimport { Validators } from '@angular/forms';\nexport let CreateArticleComponent = class CreateArticleComponent {\n  constructor(fb, http, ar, theme) {\n    this.fb = fb;\n    this.http = http;\n    this.ar = ar;\n    this.theme = theme;\n    this.tags = [];\n    this.createArticleForm = this.fb.group({\n      title: ['', Validators.required],\n      tags: '',\n      description: ['', Validators.required]\n    });\n  }\n  ngOnInit() {\n    this.http.getUserInformation().subscribe(user => this.userId = user.userId);\n    this.getData.getTheme().subscribe(theme => this.darkmode = theme);\n  }\n  putImg(e) {\n    if (e.target.files) {\n      const img = new FileReader();\n      img.readAsDataURL(e.target.files[0]);\n      img.onload = e => this.imgUrl = e.target?.result;\n    }\n  }\n  addTag() {\n    this.tags.push(this.createArticleForm.get('tags')?.value);\n    this.tag.nativeElement.value = '';\n  }\n  createArticle() {\n    const model = {\n      userId: this.userId,\n      title: this.createArticleForm.get('title')?.value,\n      tags: this.tags,\n      img: this.imgUrl,\n      description: this.createArticleForm.get('description')?.value\n    };\n    this.http.postArticleDataBase(model).subscribe();\n    this.http.postArticle(model).subscribe();\n    this.ar.navigate(['/']);\n  }\n};\n__decorate([ViewChild('tag')], CreateArticleComponent.prototype, \"tag\", void 0);\nCreateArticleComponent = __decorate([Component({\n  selector: 'app-create-article',\n  templateUrl: './create-article.component.html',\n  styleUrls: ['./create-article.component.scss']\n})], CreateArticleComponent);","map":{"version":3,"names":["Component","ViewChild","Validators","CreateArticleComponent","constructor","fb","http","ar","theme","tags","createArticleForm","group","title","required","description","ngOnInit","getUserInformation","subscribe","user","userId","getData","getTheme","darkmode","putImg","e","target","files","img","FileReader","readAsDataURL","onload","imgUrl","result","addTag","push","get","value","tag","nativeElement","createArticle","model","postArticleDataBase","postArticle","navigate","__decorate","selector","templateUrl","styleUrls"],"sources":["C:\\Users\\moham\\Desktop\\articles\\src\\app\\components\\create-article\\create-article.component.ts"],"sourcesContent":["import { Component, ElementRef, OnInit, ViewChild } from '@angular/core';\nimport { FormBuilder, FormGroup, Validators } from '@angular/forms';\nimport { ActivatedRoute, Router } from '@angular/router';\nimport { HttpService } from 'src/app/services/httpRequest/http.service';\n\n@Component({\n  selector: 'app-create-article',\n  templateUrl: './create-article.component.html',\n  styleUrls: ['./create-article.component.scss']\n})\nexport class CreateArticleComponent implements OnInit {\n  createArticleForm:FormGroup;\n  imgUrl:any;\n  tags:any=[];\n  userId:any;\n  darkmode!:boolean;\n\n  @ViewChild('tag')tag!:ElementRef;\n  constructor(private fb:FormBuilder,private http:HttpService,private ar:Router,private theme:getDat){\n    this.createArticleForm=this.fb.group({\n      title:['',Validators.required],\n      tags:'',\n      description:['',Validators.required]\n    })\n  }\n  ngOnInit(): void {\n    this.http.getUserInformation().subscribe((user:any)=>this.userId=user.userId)\n    this.getData.getTheme().subscribe(theme=>this.darkmode=theme)\n\n  }\n  putImg(e:any){\n    if(e.target.files){\n      const img =new FileReader();\n      img.readAsDataURL(e.target.files[0])\n      img.onload=e=>this.imgUrl=e.target?.result;\n    }\n  }\n  addTag(){\n    this.tags.push(this.createArticleForm.get('tags')?.value)\n    this.tag.nativeElement.value='';\n  }\n  createArticle(){\n    const model={\n      userId:this.userId,\n      title:this.createArticleForm.get('title')?.value,\n      tags:this.tags,\n      img:this.imgUrl,\n      description:this.createArticleForm.get('description')?.value\n    }\n    this.http.postArticleDataBase(model).subscribe();\n    this.http.postArticle(model).subscribe();\n    this.ar.navigate(['/'])\n  }\n}\n"],"mappings":";AAAA,SAASA,SAAS,EAAsBC,SAAS,QAAQ,eAAe;AACxE,SAAiCC,UAAU,QAAQ,gBAAgB;AAS5D,WAAMC,sBAAsB,GAA5B,MAAMA,sBAAsB;EAQjCC,YAAoBC,EAAc,EAASC,IAAgB,EAASC,EAAS,EAASC,KAAY;IAA9E,KAAAH,EAAE,GAAFA,EAAE;IAAqB,KAAAC,IAAI,GAAJA,IAAI;IAAqB,KAAAC,EAAE,GAAFA,EAAE;IAAgB,KAAAC,KAAK,GAALA,KAAK;IAL3F,KAAAC,IAAI,GAAK,EAAE;IAMT,IAAI,CAACC,iBAAiB,GAAC,IAAI,CAACL,EAAE,CAACM,KAAK,CAAC;MACnCC,KAAK,EAAC,CAAC,EAAE,EAACV,UAAU,CAACW,QAAQ,CAAC;MAC9BJ,IAAI,EAAC,EAAE;MACPK,WAAW,EAAC,CAAC,EAAE,EAACZ,UAAU,CAACW,QAAQ;KACpC,CAAC;EACJ;EACAE,QAAQA,CAAA;IACN,IAAI,CAACT,IAAI,CAACU,kBAAkB,EAAE,CAACC,SAAS,CAAEC,IAAQ,IAAG,IAAI,CAACC,MAAM,GAACD,IAAI,CAACC,MAAM,CAAC;IAC7E,IAAI,CAACC,OAAO,CAACC,QAAQ,EAAE,CAACJ,SAAS,CAACT,KAAK,IAAE,IAAI,CAACc,QAAQ,GAACd,KAAK,CAAC;EAE/D;EACAe,MAAMA,CAACC,CAAK;IACV,IAAGA,CAAC,CAACC,MAAM,CAACC,KAAK,EAAC;MAChB,MAAMC,GAAG,GAAE,IAAIC,UAAU,EAAE;MAC3BD,GAAG,CAACE,aAAa,CAACL,CAAC,CAACC,MAAM,CAACC,KAAK,CAAC,CAAC,CAAC,CAAC;MACpCC,GAAG,CAACG,MAAM,GAACN,CAAC,IAAE,IAAI,CAACO,MAAM,GAACP,CAAC,CAACC,MAAM,EAAEO,MAAM;;EAE9C;EACAC,MAAMA,CAAA;IACJ,IAAI,CAACxB,IAAI,CAACyB,IAAI,CAAC,IAAI,CAACxB,iBAAiB,CAACyB,GAAG,CAAC,MAAM,CAAC,EAAEC,KAAK,CAAC;IACzD,IAAI,CAACC,GAAG,CAACC,aAAa,CAACF,KAAK,GAAC,EAAE;EACjC;EACAG,aAAaA,CAAA;IACX,MAAMC,KAAK,GAAC;MACVrB,MAAM,EAAC,IAAI,CAACA,MAAM;MAClBP,KAAK,EAAC,IAAI,CAACF,iBAAiB,CAACyB,GAAG,CAAC,OAAO,CAAC,EAAEC,KAAK;MAChD3B,IAAI,EAAC,IAAI,CAACA,IAAI;MACdkB,GAAG,EAAC,IAAI,CAACI,MAAM;MACfjB,WAAW,EAAC,IAAI,CAACJ,iBAAiB,CAACyB,GAAG,CAAC,aAAa,CAAC,EAAEC;KACxD;IACD,IAAI,CAAC9B,IAAI,CAACmC,mBAAmB,CAACD,KAAK,CAAC,CAACvB,SAAS,EAAE;IAChD,IAAI,CAACX,IAAI,CAACoC,WAAW,CAACF,KAAK,CAAC,CAACvB,SAAS,EAAE;IACxC,IAAI,CAACV,EAAE,CAACoC,QAAQ,CAAC,CAAC,GAAG,CAAC,CAAC;EACzB;CACD;AApCkBC,UAAA,EAAhB3C,SAAS,CAAC,KAAK,CAAC,C,kDAAgB;AAPtBE,sBAAsB,GAAAyC,UAAA,EALlC5C,SAAS,CAAC;EACT6C,QAAQ,EAAE,oBAAoB;EAC9BC,WAAW,EAAE,iCAAiC;EAC9CC,SAAS,EAAE,CAAC,iCAAiC;CAC9C,CAAC,C,EACW5C,sBAAsB,CA2ClC","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}