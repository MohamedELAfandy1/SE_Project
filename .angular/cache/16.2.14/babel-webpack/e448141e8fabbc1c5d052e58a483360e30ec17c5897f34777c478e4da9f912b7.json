{"ast":null,"code":"import { map } from \"rxjs\";\nexport function emailvalidation(http) {\n  return control => {\n    return checkEmails(http).pipe(map(user => {\n      const emailExist = user.some(user => user.email == control.value);\n      return emailExist ? {\n        'emailError': true\n      } : null;\n    }));\n  };\n  function checkEmails(http) {\n    return http.getAllUsers();\n  }\n}","map":{"version":3,"names":["map","emailvalidation","http","control","checkEmails","pipe","user","emailExist","some","email","value","getAllUsers"],"sources":["C:\\Users\\moham\\Desktop\\articles\\src\\app\\components\\validations\\emailAsyncValidation.ts"],"sourcesContent":["import { AbstractControl, AsyncValidatorFn, ValidationErrors } from \"@angular/forms\";\r\nimport { Observable, map } from \"rxjs\";\r\nimport { HttpService } from \"src/app/services/httpRequest/http.service\";\r\n\r\nexport function emailvalidation(http:HttpService):AsyncValidatorFn{\r\n    return (control:AbstractControl):Observable<ValidationErrors|null>=>{\r\n        return checkEmails(http).pipe(\r\n            map((user:any[])=>{\r\n               const emailExist=user.some(user=>user.email==control.value)\r\n               return emailExist?{'emailError':true}:null;\r\n            })\r\n        )\r\n    }\r\n    function checkEmails(http:HttpService):Observable<any>{\r\n        return http.getAllUsers();\r\n    }\r\n}"],"mappings":"AACA,SAAqBA,GAAG,QAAQ,MAAM;AAGtC,OAAM,SAAUC,eAAeA,CAACC,IAAgB;EAC5C,OAAQC,OAAuB,IAAqC;IAChE,OAAOC,WAAW,CAACF,IAAI,CAAC,CAACG,IAAI,CACzBL,GAAG,CAAEM,IAAU,IAAG;MACf,MAAMC,UAAU,GAACD,IAAI,CAACE,IAAI,CAACF,IAAI,IAAEA,IAAI,CAACG,KAAK,IAAEN,OAAO,CAACO,KAAK,CAAC;MAC3D,OAAOH,UAAU,GAAC;QAAC,YAAY,EAAC;MAAI,CAAC,GAAC,IAAI;IAC7C,CAAC,CAAC,CACL;EACL,CAAC;EACD,SAASH,WAAWA,CAACF,IAAgB;IACjC,OAAOA,IAAI,CAACS,WAAW,EAAE;EAC7B;AACJ","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}